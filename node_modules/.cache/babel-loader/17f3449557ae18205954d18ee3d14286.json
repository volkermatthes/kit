{"ast":null,"code":"var _jsxFileName = \"/Users/volkermatthes/Coding/Diverse/kit/src/components/Avatar.tsx\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nconst StyledAvatar = styled.div`\n  display: inline-flex;\n  border-radius: 50%;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  background-color: var(--color-primary1);\n  color: var(--color-primary3);\n  font-weight: bold;\n  text-transform: uppercase;\n  overflow: hidden;\n  ${props => {\n  if (props.size === 'small') {\n    return css`\n        width: var(--element-height-field);\n        height: var(--element-height-field);\n      `;\n  }\n\n  return css`\n      width: var(--element-height-default);\n      height: var(--element-height-default);\n    `;\n}}\n`;\nconst StyledImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.image});\n  background-size: contain;\n`;\n\nconst Avatar = ({\n  image,\n  name,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(StyledAvatar, Object.assign({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }), image ? /*#__PURE__*/React.createElement(StyledImage, {\n    image: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 43\n    }\n  }) : name);\n};\n\nAvatar.defaultProps = {\n  size: 'default'\n};\nexport default Avatar;","map":{"version":3,"sources":["/Users/volkermatthes/Coding/Diverse/kit/src/components/Avatar.tsx"],"names":["React","styled","css","StyledAvatar","div","props","size","StyledImage","image","Avatar","name","rest","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAyD,OAAzD;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAQA,MAAMC,YAAY,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;;;IAW3BC,KAAD,IAAgB;AAChB,MAAIA,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AAC1B,WAAOJ,GAAI;;;OAAX;AAID;;AACD,SAAOA,GAAI;;;KAAX;AAID,CAAC;CAtBJ;AAyBA,MAAMK,WAAW,GAAGN,MAAM,CAACG,GAAI;;;0BAGJC,KAAD,IAAgBA,KAAK,CAACG,KAAM;;CAHtD;;AAOA,MAAMC,MAAsC,GAAG,CAAC;AAAED,EAAAA,KAAF;AAASE,EAAAA,IAAT;AAAe,KAAGC;AAAlB,CAAD,KAA8B;AAC3E,sBAAO,oBAAC,YAAD,oBAAkBA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyBH,KAAK,gBAAG,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmCE,IAAjE,CAAP;AACD,CAFD;;AAIAD,MAAM,CAACG,YAAP,GAAsB;AACpBN,EAAAA,IAAI,EAAE;AADc,CAAtB;AAIA,eAAeG,MAAf","sourcesContent":["import React, { FunctionComponent, HTMLAttributes } from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface AvatarProps extends HTMLAttributes<HTMLPreElement> {\n  image?: string;\n  name?: string;\n  size?: 'default' | 'small';\n}\n\nconst StyledAvatar = styled.div`\n  display: inline-flex;\n  border-radius: 50%;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  background-color: var(--color-primary1);\n  color: var(--color-primary3);\n  font-weight: bold;\n  text-transform: uppercase;\n  overflow: hidden;\n  ${(props: any) => {\n    if (props.size === 'small') {\n      return css`\n        width: var(--element-height-field);\n        height: var(--element-height-field);\n      `;\n    }\n    return css`\n      width: var(--element-height-default);\n      height: var(--element-height-default);\n    `;\n  }}\n`;\n\nconst StyledImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props: any) => props.image});\n  background-size: contain;\n`;\n\nconst Avatar: FunctionComponent<AvatarProps> = ({ image, name, ...rest }) => {\n  return <StyledAvatar {...rest}>{image ? <StyledImage image={image} /> : name}</StyledAvatar>;\n};\n\nAvatar.defaultProps = {\n  size: 'default',\n};\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}