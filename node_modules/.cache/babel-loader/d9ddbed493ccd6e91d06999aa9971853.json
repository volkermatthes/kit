{"ast":null,"code":"var _jsxFileName = \"/Users/volkermatthes/Coding/Diverse/kit/src/components/Checkbox.tsx\";\nimport React, { useState, forwardRef, useEffect } from 'react';\nimport styled from 'styled-components';\nconst StyledInput = styled.input`\n    display: none;\n`;\nconst StyledCheckbox = styled.label`\n`;\nconst StyledLabel = styled.span`\n`;\nconst Checkbox = forwardRef(({\n  className,\n  onChange,\n  disabled,\n  checked,\n  label,\n  ...rest\n}, ref) => {\n  const [isChecked, setIsChecked] = useState(!!checked);\n  useEffect(() => {\n    setIsChecked(checked);\n  }, [checked]);\n\n  const handleChange = e => {\n    if (checked === undefined) {\n      setIsChecked(e.target.checked);\n    }\n\n    if (onChange) {\n      return onChange(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledCheckbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledInput, Object.assign({\n    type: \"checkbox\",\n    checked: checked !== undefined ? checked : isChecked,\n    disabled: disabled,\n    onChange: handleChange\n  }, rest, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })), label && /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, label));\n});\nexport default Checkbox;","map":{"version":3,"sources":["/Users/volkermatthes/Coding/Diverse/kit/src/components/Checkbox.tsx"],"names":["React","useState","forwardRef","useEffect","styled","StyledInput","input","StyledCheckbox","label","StyledLabel","span","Checkbox","className","onChange","disabled","checked","rest","ref","isChecked","setIsChecked","handleChange","e","undefined","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgCC,QAAhC,EAA0CC,UAA1C,EAAsDC,SAAtD,QAAuE,OAAvE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAOA,MAAMC,WAAW,GAAGD,MAAM,CAACE,KAAM;;CAAjC;AAIA,MAAMC,cAAc,GAAGH,MAAM,CAACI,KAAM;CAApC;AAGA,MAAMC,WAAW,GAAGL,MAAM,CAACM,IAAK;CAAhC;AAGA,MAAMC,QAAQ,GAAGT,UAAU,CAAC,CAAC;AAAEU,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA,OAAjC;AAA0CP,EAAAA,KAA1C;AAAiD,KAAGQ;AAApD,CAAD,EAA6DC,GAA7D,KAAqE;AAC7F,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,CAAC,CAACc,OAAH,CAA1C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,YAAY,CAACJ,OAAD,CAAZ;AACH,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMK,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAIN,OAAO,KAAKO,SAAhB,EAA2B;AACvBH,MAAAA,YAAY,CAACE,CAAC,CAACE,MAAF,CAASR,OAAV,CAAZ;AACH;;AACD,QAAIF,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACQ,CAAD,CAAf;AACD;AACF,GAPH;;AASA,sBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEN,OAAO,KAAKO,SAAZ,GAAwBP,OAAxB,GAAkCG,SAAxE;AAAmF,IAAA,QAAQ,EAAEJ,QAA7F;AAAuG,IAAA,QAAQ,EAAEM;AAAjH,KAAmIJ,IAAnI;AAAyI,IAAA,GAAG,EAAEC,GAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAECT,KAAK,iBAAI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,KAAd,CAFV,CADJ;AAMH,CAtB0B,CAA3B;AAwBA,eAAeG,QAAf","sourcesContent":["import React, { HTMLAttributes, useState, forwardRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\ninterface CheckboxProps extends HTMLAttributes<HTMLInputElement> {\n  checked?: boolean;\n  label?: string;\n}\n\nconst StyledInput = styled.input`\n    display: none;\n`;\n\nconst StyledCheckbox = styled.label`\n`;\n\nconst StyledLabel = styled.span`\n`;\n\nconst Checkbox = forwardRef(({ className, onChange, disabled, checked, label, ...rest }, ref) => {\n    const [isChecked, setIsChecked] = useState(!!checked);\n\n    useEffect(() => {\n        setIsChecked(checked)\n    }, [checked])\n\n    const handleChange = e => {\n        if (checked === undefined) {\n            setIsChecked(e.target.checked)\n        }\n        if (onChange) {\n          return onChange(e)\n        }\n      }\n\n    return (\n        <StyledCheckbox>\n            <StyledInput type=\"checkbox\" checked={checked !== undefined ? checked : isChecked} disabled={disabled} onChange={handleChange} {...rest} ref={ref} />\n        {label && <StyledLabel>{label}</StyledLabel>}\n        </StyledCheckbox>\n    )\n});\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}