{"ast":null,"code":"var _jsxFileName = \"/Users/volkermatthes/Coding/Diverse/kit/src/components/Checkbox.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nconst StyledInput = styled.input`\n    display: none;\n`;\nconst StyledCheckbox = styled.label`\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    cursor: pointer;\n    &:before {\n        width: 16px;\n        height: 16px;\n        display: block;\n        background-color: var(--color-secondary2);\n        border-radius: var(--border-radius);\n        content: '';\n    }\n    ${props => {\n  if (props.test) {\n    return css`\n                &:before {\n                    background-color: var(--color-primary3);\n                }\n            `;\n  }\n}}\n`;\nconst StyledLabel = styled.span`\n    margin-left: var(--units-medium);\n`;\n\nconst Checkbox = ({\n  className,\n  label,\n  disabled,\n  onChange,\n  checked,\n  ...rest\n}) => {\n  const [isChecked, setIsChecked] = useState(!!checked);\n  const inputEl = useRef(null);\n  useEffect(() => {\n    setIsChecked(checked);\n    console.log(checked);\n  }, [checked]);\n\n  const handleChange = e => {\n    if (checked === undefined) {\n      setIsChecked(e.target.checked);\n    }\n\n    if (onChange) {\n      return onChange(e);\n    }\n  };\n\n  const triggerChange = () => {\n    inputEl.current.click();\n  };\n\n  return /*#__PURE__*/React.createElement(StyledCheckbox, {\n    test: isChecked,\n    className: className,\n    onClick: triggerChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledInput, Object.assign({\n    type: \"checkbox\",\n    checked: checked !== undefined ? checked : isChecked,\n    disabled: disabled,\n    onChange: handleChange,\n    ref: inputEl\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), label && /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, label));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/volkermatthes/Coding/Diverse/kit/src/components/Checkbox.tsx"],"names":["React","useState","useEffect","useRef","styled","css","StyledInput","input","StyledCheckbox","label","props","test","StyledLabel","span","Checkbox","className","disabled","onChange","checked","rest","isChecked","setIsChecked","inputEl","console","log","handleChange","e","undefined","target","triggerChange","current","click"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA6CC,SAA7C,EAA6EC,MAA7E,QAA2F,OAA3F;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAOA,MAAMC,WAAW,GAAGF,MAAM,CAACG,KAAM;;CAAjC;AAIA,MAAMC,cAAc,GAAGJ,MAAM,CAACK,KAAM;;;;;;;;;;;;;MAa7BC,KAAD,IAAW;AACT,MAAGA,KAAK,CAACC,IAAT,EAAe;AACX,WAAON,GAAI;;;;aAAX;AAKH;AACJ,CAAC;CArBN;AAwBA,MAAMO,WAAW,GAAGR,MAAM,CAACS,IAAK;;CAAhC;;AAIA,MAAMC,QAA0C,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYN,EAAAA,KAAZ;AAAmBO,EAAAA,QAAnB;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA,OAAvC;AAAgD,KAAGC;AAAnD,CAAD,KAA8D;AAC7G,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,CAAC,CAACiB,OAAH,CAA1C;AACA,QAAMI,OAAO,GAAGnB,MAAM,CAAC,IAAD,CAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,YAAY,CAACH,OAAD,CAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACH,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;;AAKA,QAAMO,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAIR,OAAO,KAAKS,SAAhB,EAA2B;AACvBN,MAAAA,YAAY,CAACK,CAAC,CAACE,MAAF,CAASV,OAAV,CAAZ;AACH;;AACD,QAAID,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACS,CAAD,CAAf;AACD;AACJ,GAPD;;AASA,QAAMG,aAAa,GAAG,MAAY;AAC9BP,IAAAA,OAAO,CAACQ,OAAR,CAAgBC,KAAhB;AACH,GAFD;;AAIA,sBACI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEX,SAAtB;AAAiC,IAAA,SAAS,EAAEL,SAA5C;AAAuD,IAAA,OAAO,EAAEc,aAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEX,OAAO,KAAKS,SAAZ,GAAwBT,OAAxB,GAAkCE,SAAxE;AAAmF,IAAA,QAAQ,EAAEJ,QAA7F;AAAuG,IAAA,QAAQ,EAAES,YAAjH;AAA+H,IAAA,GAAG,EAAEH;AAApI,KAAiJH,IAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAECV,KAAK,iBAAI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,KAAd,CAFV,CADJ;AAMH,CA5BD;;AA8BA,eAAeK,QAAf","sourcesContent":["import React, { useState, FunctionComponent, useEffect, InputHTMLAttributes, useRef } from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface CheckboxProps extends InputHTMLAttributes<HTMLInputElement> {\n  checked?: boolean;\n  label?: string;\n}\n\nconst StyledInput = styled.input`\n    display: none;\n`;\n\nconst StyledCheckbox = styled.label`\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    cursor: pointer;\n    &:before {\n        width: 16px;\n        height: 16px;\n        display: block;\n        background-color: var(--color-secondary2);\n        border-radius: var(--border-radius);\n        content: '';\n    }\n    ${(props) => {\n        if(props.test) {\n            return css`\n                &:before {\n                    background-color: var(--color-primary3);\n                }\n            `\n        }\n    }}\n`;\n\nconst StyledLabel = styled.span`\n    margin-left: var(--units-medium);\n`;\n\nconst Checkbox: FunctionComponent<CheckboxProps> = ({className, label, disabled, onChange, checked, ...rest}) => {\n    const [isChecked, setIsChecked] = useState(!!checked);\n    const inputEl = useRef(null);\n\n    useEffect(() => {\n        setIsChecked(checked)\n        console.log(checked)\n    }, [checked])\n\n    const handleChange = e => {\n        if (checked === undefined) {\n            setIsChecked(e.target.checked)\n        }\n        if (onChange) {\n          return onChange(e)\n        }\n    }\n\n    const triggerChange = (): void => {\n        inputEl.current.click();\n    }\n\n    return (\n        <StyledCheckbox test={isChecked} className={className} onClick={triggerChange}>\n            <StyledInput type=\"checkbox\" checked={checked !== undefined ? checked : isChecked} disabled={disabled} onChange={handleChange} ref={inputEl} {...rest} />\n        {label && <StyledLabel>{label}</StyledLabel>}\n        </StyledCheckbox>\n    )\n};\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}