{"ast":null,"code":"var _jsxFileName = \"/Users/volkermatthes/Coding/Diverse/kit/src/components/Breadcrumbs.tsx\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nconst StyledBreadcrumbs = styled.ol`\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n  color: var(--color-secondary3);\n  font-size: var(--font-size-base);\n`;\n\nconst Breadcrumbs = ({\n  children,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(StyledBreadcrumbs, Object.assign({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }), children);\n};\n\nconst StyledBreadcrumb = styled.li`\n  line-height: 1;\n  color: var(--color-secondary3);\n  text-decoration: underline;\n  font-size: var(--font-size-base);\n  display: inline-block;\n  font-weight: 500;\n  &:after {\n    display: inline-block;\n    content: '/';\n    margin: 0 var(--units-small);\n    text-decoration: none;\n  }\n  ${({\n  current\n}) => current && css`\n      color: var(--color-black);\n      text-decoration: none;\n      &:after {\n        display: none;\n      }\n    `}\n`;\n\nconst Item = ({\n  children,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(StyledBreadcrumb, Object.assign({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }), children);\n};\n\nBreadcrumbs.displayName = 'Breadcrumbs';\nBreadcrumbs.Item = Item;\nBreadcrumbs.Item.displayName = 'Breadcrumbs.Item';\nexport default Breadcrumbs;","map":{"version":3,"sources":["/Users/volkermatthes/Coding/Diverse/kit/src/components/Breadcrumbs.tsx"],"names":["React","styled","css","StyledBreadcrumbs","ol","Breadcrumbs","children","rest","StyledBreadcrumb","li","current","Item","displayName"],"mappings":";AAAA,OAAOA,KAAP,MAAyD,OAAzD;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAUA,MAAMC,iBAAiB,GAAGF,MAAM,CAACG,EAAG;;;;;;CAApC;;AAQA,MAAMC,WAAqD,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AACvF,sBAAO,oBAAC,iBAAD,oBAAuBA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA8BD,QAA9B,CAAP;AACD,CAFD;;AAIA,MAAME,gBAAgB,GAAGP,MAAM,CAACQ,EAAG;;;;;;;;;;;;;IAa/B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,OAAO,IACPR,GAAI;;;;;;KAMF;CArBN;;AAwBA,MAAMS,IAAkC,GAAG,CAAC;AAAEL,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AACpE,sBAAO,oBAAC,gBAAD,oBAAsBA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA6BD,QAA7B,CAAP;AACD,CAFD;;AAIAD,WAAW,CAACO,WAAZ,GAA0B,aAA1B;AACAP,WAAW,CAACM,IAAZ,GAAmBA,IAAnB;AACAN,WAAW,CAACM,IAAZ,CAAiBC,WAAjB,GAA+B,kBAA/B;AAEA,eAAeP,WAAf","sourcesContent":["import React, { FunctionComponent, HTMLAttributes } from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface ItemProps extends HTMLAttributes<HTMLOListElement> {\n  current?: boolean;\n}\n\ninterface BreadcrumbsProps extends HTMLAttributes<HTMLOListElement> {\n  Item: React.FC<ItemProps>;\n}\n\nconst StyledBreadcrumbs = styled.ol`\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n  color: var(--color-secondary3);\n  font-size: var(--font-size-base);\n`;\n\nconst Breadcrumbs: FunctionComponent<{}> & BreadcrumbsProps = ({ children, ...rest }) => {\n  return <StyledBreadcrumbs {...rest}>{children}</StyledBreadcrumbs>;\n};\n\nconst StyledBreadcrumb = styled.li`\n  line-height: 1;\n  color: var(--color-secondary3);\n  text-decoration: underline;\n  font-size: var(--font-size-base);\n  display: inline-block;\n  font-weight: 500;\n  &:after {\n    display: inline-block;\n    content: '/';\n    margin: 0 var(--units-small);\n    text-decoration: none;\n  }\n  ${({ current }: ItemProps) =>\n    current &&\n    css`\n      color: var(--color-black);\n      text-decoration: none;\n      &:after {\n        display: none;\n      }\n    `}\n`;\n\nconst Item: FunctionComponent<ItemProps> = ({ children, ...rest }) => {\n  return <StyledBreadcrumb {...rest}>{children}</StyledBreadcrumb>;\n};\n\nBreadcrumbs.displayName = 'Breadcrumbs';\nBreadcrumbs.Item = Item;\nBreadcrumbs.Item.displayName = 'Breadcrumbs.Item';\n\nexport default Breadcrumbs;\n"]},"metadata":{},"sourceType":"module"}